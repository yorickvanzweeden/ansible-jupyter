---
- name: install package dependencies for miniconda installation
  package:
    name: "{{ miniconda_package_dependencies }}"
    state: present

- name: check for installation of miniconda
  stat:
    path: "{{ miniconda_conda_bin }}"
  register: miniconda_conda_binary
  changed_when: false

- name: download miniconda installer
  get_url:
    url: "{{ miniconda_installer_url }}"
    checksum: "{{ miniconda_checksum }}"
    dest: "/tmp/{{ miniconda_installer_sh }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
    timeout: "{{ miniconda_timeout_seconds }}"
  when: not miniconda_conda_binary.stat.exists

- name: install miniconda
  command: "/tmp/{{ miniconda_installer_sh }} -b -p {{ miniconda_dir }}"
  args:
    creates: "{{ miniconda_dir }}"
  when: not miniconda_conda_binary.stat.exists

- name: delete miniconda installer
  file:
    path: "/tmp/{{ miniconda_installer_sh }}"
    state: absent

- name: link /etc/profile.d/conda.sh
  file:
    src: "{{ miniconda_etc_profile_conda }}.sh"
    dest: "{{ miniconda_etc_profile }}/conda.sh"
    state: link

- name: link /etc/profile.d/conda.csh
  file:
    src: "{{ miniconda_etc_profile_conda }}.csh"
    dest: "{{ miniconda_etc_profile }}/conda.csh"
    state: link

- name: source conda.sh in /etc/bash.bashrc (Debian-based distros)
  blockinfile:
    path: "/etc/bash.bashrc"
    state: present
    block: |
      # Initialize miniconda
      . {{ miniconda_etc_profile_conda }}.sh
    marker: '# {mark} ANSIBLE MANAGED BLOCK jkglasbrenner.miniconda'
  when: ansible_os_family == 'Debian'

- name: update base miniconda packages
  shell: bash -lc "conda update -y --all"
  register: conda_update_pkgs
  when: miniconda_pkg_update
  changed_when: conda_update_pkgs.stdout is not search('All requested packages already installed')
  failed_when: conda_update_pkgs.rc != 0
...
